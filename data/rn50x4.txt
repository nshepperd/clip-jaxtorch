CLIP(
  (visual): ModifiedResNet(
    (conv1): Conv2d(3, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (conv2): Conv2d(40, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu2): ReLU(inplace=True)
    (conv3): Conv2d(40, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
          (0): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(320, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(320, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(640, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(640, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (6): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (7): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (8): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (9): Bottleneck(
        (conv1): Conv2d(1280, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1280, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (conv3): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
        (downsample): Sequential(
          (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
          (0): Conv2d(1280, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu1): ReLU(inplace=True)
        (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu2): ReLU(inplace=True)
        (avgpool): Identity()
        (conv3): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu3): ReLU(inplace=True)
      )
    )
    (attnpool): AttentionPool2d(
      (k_proj): Linear(in_features=2560, out_features=2560, bias=True)
      (q_proj): Linear(in_features=2560, out_features=2560, bias=True)
      (v_proj): Linear(in_features=2560, out_features=2560, bias=True)
      (c_proj): Linear(in_features=2560, out_features=640, bias=True)
    )
  )
  (transformer): Transformer(
    (resblocks): Sequential(
      (0): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (1): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (2): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (3): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (4): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (5): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (6): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (7): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (8): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (9): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (10): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
      (11): ResidualAttentionBlock(
        (attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=640, out_features=640, bias=True)
        )
        (ln_1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
        (mlp): Sequential(
          (c_fc): Linear(in_features=640, out_features=2560, bias=True)
          (gelu): QuickGELU()
          (c_proj): Linear(in_features=2560, out_features=640, bias=True)
        )
        (ln_2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (token_embedding): Embedding(49408, 640)
  (ln_final): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
)
positional_embedding torch.Size([77, 640])
text_projection torch.Size([640, 640])
logit_scale torch.Size([])
visual.conv1.weight torch.Size([40, 3, 3, 3])
visual.bn1.weight torch.Size([40])
visual.bn1.bias torch.Size([40])
visual.conv2.weight torch.Size([40, 40, 3, 3])
visual.bn2.weight torch.Size([40])
visual.bn2.bias torch.Size([40])
visual.conv3.weight torch.Size([80, 40, 3, 3])
visual.bn3.weight torch.Size([80])
visual.bn3.bias torch.Size([80])
visual.layer1.0.conv1.weight torch.Size([80, 80, 1, 1])
visual.layer1.0.bn1.weight torch.Size([80])
visual.layer1.0.bn1.bias torch.Size([80])
visual.layer1.0.conv2.weight torch.Size([80, 80, 3, 3])
visual.layer1.0.bn2.weight torch.Size([80])
visual.layer1.0.bn2.bias torch.Size([80])
visual.layer1.0.conv3.weight torch.Size([320, 80, 1, 1])
visual.layer1.0.bn3.weight torch.Size([320])
visual.layer1.0.bn3.bias torch.Size([320])
visual.layer1.0.downsample.0.weight torch.Size([320, 80, 1, 1])
visual.layer1.0.downsample.1.weight torch.Size([320])
visual.layer1.0.downsample.1.bias torch.Size([320])
visual.layer1.1.conv1.weight torch.Size([80, 320, 1, 1])
visual.layer1.1.bn1.weight torch.Size([80])
visual.layer1.1.bn1.bias torch.Size([80])
visual.layer1.1.conv2.weight torch.Size([80, 80, 3, 3])
visual.layer1.1.bn2.weight torch.Size([80])
visual.layer1.1.bn2.bias torch.Size([80])
visual.layer1.1.conv3.weight torch.Size([320, 80, 1, 1])
visual.layer1.1.bn3.weight torch.Size([320])
visual.layer1.1.bn3.bias torch.Size([320])
visual.layer1.2.conv1.weight torch.Size([80, 320, 1, 1])
visual.layer1.2.bn1.weight torch.Size([80])
visual.layer1.2.bn1.bias torch.Size([80])
visual.layer1.2.conv2.weight torch.Size([80, 80, 3, 3])
visual.layer1.2.bn2.weight torch.Size([80])
visual.layer1.2.bn2.bias torch.Size([80])
visual.layer1.2.conv3.weight torch.Size([320, 80, 1, 1])
visual.layer1.2.bn3.weight torch.Size([320])
visual.layer1.2.bn3.bias torch.Size([320])
visual.layer1.3.conv1.weight torch.Size([80, 320, 1, 1])
visual.layer1.3.bn1.weight torch.Size([80])
visual.layer1.3.bn1.bias torch.Size([80])
visual.layer1.3.conv2.weight torch.Size([80, 80, 3, 3])
visual.layer1.3.bn2.weight torch.Size([80])
visual.layer1.3.bn2.bias torch.Size([80])
visual.layer1.3.conv3.weight torch.Size([320, 80, 1, 1])
visual.layer1.3.bn3.weight torch.Size([320])
visual.layer1.3.bn3.bias torch.Size([320])
visual.layer2.0.conv1.weight torch.Size([160, 320, 1, 1])
visual.layer2.0.bn1.weight torch.Size([160])
visual.layer2.0.bn1.bias torch.Size([160])
visual.layer2.0.conv2.weight torch.Size([160, 160, 3, 3])
visual.layer2.0.bn2.weight torch.Size([160])
visual.layer2.0.bn2.bias torch.Size([160])
visual.layer2.0.conv3.weight torch.Size([640, 160, 1, 1])
visual.layer2.0.bn3.weight torch.Size([640])
visual.layer2.0.bn3.bias torch.Size([640])
visual.layer2.0.downsample.0.weight torch.Size([640, 320, 1, 1])
visual.layer2.0.downsample.1.weight torch.Size([640])
visual.layer2.0.downsample.1.bias torch.Size([640])
visual.layer2.1.conv1.weight torch.Size([160, 640, 1, 1])
visual.layer2.1.bn1.weight torch.Size([160])
visual.layer2.1.bn1.bias torch.Size([160])
visual.layer2.1.conv2.weight torch.Size([160, 160, 3, 3])
visual.layer2.1.bn2.weight torch.Size([160])
visual.layer2.1.bn2.bias torch.Size([160])
visual.layer2.1.conv3.weight torch.Size([640, 160, 1, 1])
visual.layer2.1.bn3.weight torch.Size([640])
visual.layer2.1.bn3.bias torch.Size([640])
visual.layer2.2.conv1.weight torch.Size([160, 640, 1, 1])
visual.layer2.2.bn1.weight torch.Size([160])
visual.layer2.2.bn1.bias torch.Size([160])
visual.layer2.2.conv2.weight torch.Size([160, 160, 3, 3])
visual.layer2.2.bn2.weight torch.Size([160])
visual.layer2.2.bn2.bias torch.Size([160])
visual.layer2.2.conv3.weight torch.Size([640, 160, 1, 1])
visual.layer2.2.bn3.weight torch.Size([640])
visual.layer2.2.bn3.bias torch.Size([640])
visual.layer2.3.conv1.weight torch.Size([160, 640, 1, 1])
visual.layer2.3.bn1.weight torch.Size([160])
visual.layer2.3.bn1.bias torch.Size([160])
visual.layer2.3.conv2.weight torch.Size([160, 160, 3, 3])
visual.layer2.3.bn2.weight torch.Size([160])
visual.layer2.3.bn2.bias torch.Size([160])
visual.layer2.3.conv3.weight torch.Size([640, 160, 1, 1])
visual.layer2.3.bn3.weight torch.Size([640])
visual.layer2.3.bn3.bias torch.Size([640])
visual.layer2.4.conv1.weight torch.Size([160, 640, 1, 1])
visual.layer2.4.bn1.weight torch.Size([160])
visual.layer2.4.bn1.bias torch.Size([160])
visual.layer2.4.conv2.weight torch.Size([160, 160, 3, 3])
visual.layer2.4.bn2.weight torch.Size([160])
visual.layer2.4.bn2.bias torch.Size([160])
visual.layer2.4.conv3.weight torch.Size([640, 160, 1, 1])
visual.layer2.4.bn3.weight torch.Size([640])
visual.layer2.4.bn3.bias torch.Size([640])
visual.layer2.5.conv1.weight torch.Size([160, 640, 1, 1])
visual.layer2.5.bn1.weight torch.Size([160])
visual.layer2.5.bn1.bias torch.Size([160])
visual.layer2.5.conv2.weight torch.Size([160, 160, 3, 3])
visual.layer2.5.bn2.weight torch.Size([160])
visual.layer2.5.bn2.bias torch.Size([160])
visual.layer2.5.conv3.weight torch.Size([640, 160, 1, 1])
visual.layer2.5.bn3.weight torch.Size([640])
visual.layer2.5.bn3.bias torch.Size([640])
visual.layer3.0.conv1.weight torch.Size([320, 640, 1, 1])
visual.layer3.0.bn1.weight torch.Size([320])
visual.layer3.0.bn1.bias torch.Size([320])
visual.layer3.0.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.0.bn2.weight torch.Size([320])
visual.layer3.0.bn2.bias torch.Size([320])
visual.layer3.0.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.0.bn3.weight torch.Size([1280])
visual.layer3.0.bn3.bias torch.Size([1280])
visual.layer3.0.downsample.0.weight torch.Size([1280, 640, 1, 1])
visual.layer3.0.downsample.1.weight torch.Size([1280])
visual.layer3.0.downsample.1.bias torch.Size([1280])
visual.layer3.1.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.1.bn1.weight torch.Size([320])
visual.layer3.1.bn1.bias torch.Size([320])
visual.layer3.1.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.1.bn2.weight torch.Size([320])
visual.layer3.1.bn2.bias torch.Size([320])
visual.layer3.1.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.1.bn3.weight torch.Size([1280])
visual.layer3.1.bn3.bias torch.Size([1280])
visual.layer3.2.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.2.bn1.weight torch.Size([320])
visual.layer3.2.bn1.bias torch.Size([320])
visual.layer3.2.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.2.bn2.weight torch.Size([320])
visual.layer3.2.bn2.bias torch.Size([320])
visual.layer3.2.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.2.bn3.weight torch.Size([1280])
visual.layer3.2.bn3.bias torch.Size([1280])
visual.layer3.3.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.3.bn1.weight torch.Size([320])
visual.layer3.3.bn1.bias torch.Size([320])
visual.layer3.3.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.3.bn2.weight torch.Size([320])
visual.layer3.3.bn2.bias torch.Size([320])
visual.layer3.3.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.3.bn3.weight torch.Size([1280])
visual.layer3.3.bn3.bias torch.Size([1280])
visual.layer3.4.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.4.bn1.weight torch.Size([320])
visual.layer3.4.bn1.bias torch.Size([320])
visual.layer3.4.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.4.bn2.weight torch.Size([320])
visual.layer3.4.bn2.bias torch.Size([320])
visual.layer3.4.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.4.bn3.weight torch.Size([1280])
visual.layer3.4.bn3.bias torch.Size([1280])
visual.layer3.5.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.5.bn1.weight torch.Size([320])
visual.layer3.5.bn1.bias torch.Size([320])
visual.layer3.5.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.5.bn2.weight torch.Size([320])
visual.layer3.5.bn2.bias torch.Size([320])
visual.layer3.5.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.5.bn3.weight torch.Size([1280])
visual.layer3.5.bn3.bias torch.Size([1280])
visual.layer3.6.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.6.bn1.weight torch.Size([320])
visual.layer3.6.bn1.bias torch.Size([320])
visual.layer3.6.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.6.bn2.weight torch.Size([320])
visual.layer3.6.bn2.bias torch.Size([320])
visual.layer3.6.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.6.bn3.weight torch.Size([1280])
visual.layer3.6.bn3.bias torch.Size([1280])
visual.layer3.7.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.7.bn1.weight torch.Size([320])
visual.layer3.7.bn1.bias torch.Size([320])
visual.layer3.7.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.7.bn2.weight torch.Size([320])
visual.layer3.7.bn2.bias torch.Size([320])
visual.layer3.7.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.7.bn3.weight torch.Size([1280])
visual.layer3.7.bn3.bias torch.Size([1280])
visual.layer3.8.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.8.bn1.weight torch.Size([320])
visual.layer3.8.bn1.bias torch.Size([320])
visual.layer3.8.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.8.bn2.weight torch.Size([320])
visual.layer3.8.bn2.bias torch.Size([320])
visual.layer3.8.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.8.bn3.weight torch.Size([1280])
visual.layer3.8.bn3.bias torch.Size([1280])
visual.layer3.9.conv1.weight torch.Size([320, 1280, 1, 1])
visual.layer3.9.bn1.weight torch.Size([320])
visual.layer3.9.bn1.bias torch.Size([320])
visual.layer3.9.conv2.weight torch.Size([320, 320, 3, 3])
visual.layer3.9.bn2.weight torch.Size([320])
visual.layer3.9.bn2.bias torch.Size([320])
visual.layer3.9.conv3.weight torch.Size([1280, 320, 1, 1])
visual.layer3.9.bn3.weight torch.Size([1280])
visual.layer3.9.bn3.bias torch.Size([1280])
visual.layer4.0.conv1.weight torch.Size([640, 1280, 1, 1])
visual.layer4.0.bn1.weight torch.Size([640])
visual.layer4.0.bn1.bias torch.Size([640])
visual.layer4.0.conv2.weight torch.Size([640, 640, 3, 3])
visual.layer4.0.bn2.weight torch.Size([640])
visual.layer4.0.bn2.bias torch.Size([640])
visual.layer4.0.conv3.weight torch.Size([2560, 640, 1, 1])
visual.layer4.0.bn3.weight torch.Size([2560])
visual.layer4.0.bn3.bias torch.Size([2560])
visual.layer4.0.downsample.0.weight torch.Size([2560, 1280, 1, 1])
visual.layer4.0.downsample.1.weight torch.Size([2560])
visual.layer4.0.downsample.1.bias torch.Size([2560])
visual.layer4.1.conv1.weight torch.Size([640, 2560, 1, 1])
visual.layer4.1.bn1.weight torch.Size([640])
visual.layer4.1.bn1.bias torch.Size([640])
visual.layer4.1.conv2.weight torch.Size([640, 640, 3, 3])
visual.layer4.1.bn2.weight torch.Size([640])
visual.layer4.1.bn2.bias torch.Size([640])
visual.layer4.1.conv3.weight torch.Size([2560, 640, 1, 1])
visual.layer4.1.bn3.weight torch.Size([2560])
visual.layer4.1.bn3.bias torch.Size([2560])
visual.layer4.2.conv1.weight torch.Size([640, 2560, 1, 1])
visual.layer4.2.bn1.weight torch.Size([640])
visual.layer4.2.bn1.bias torch.Size([640])
visual.layer4.2.conv2.weight torch.Size([640, 640, 3, 3])
visual.layer4.2.bn2.weight torch.Size([640])
visual.layer4.2.bn2.bias torch.Size([640])
visual.layer4.2.conv3.weight torch.Size([2560, 640, 1, 1])
visual.layer4.2.bn3.weight torch.Size([2560])
visual.layer4.2.bn3.bias torch.Size([2560])
visual.layer4.3.conv1.weight torch.Size([640, 2560, 1, 1])
visual.layer4.3.bn1.weight torch.Size([640])
visual.layer4.3.bn1.bias torch.Size([640])
visual.layer4.3.conv2.weight torch.Size([640, 640, 3, 3])
visual.layer4.3.bn2.weight torch.Size([640])
visual.layer4.3.bn2.bias torch.Size([640])
visual.layer4.3.conv3.weight torch.Size([2560, 640, 1, 1])
visual.layer4.3.bn3.weight torch.Size([2560])
visual.layer4.3.bn3.bias torch.Size([2560])
visual.layer4.4.conv1.weight torch.Size([640, 2560, 1, 1])
visual.layer4.4.bn1.weight torch.Size([640])
visual.layer4.4.bn1.bias torch.Size([640])
visual.layer4.4.conv2.weight torch.Size([640, 640, 3, 3])
visual.layer4.4.bn2.weight torch.Size([640])
visual.layer4.4.bn2.bias torch.Size([640])
visual.layer4.4.conv3.weight torch.Size([2560, 640, 1, 1])
visual.layer4.4.bn3.weight torch.Size([2560])
visual.layer4.4.bn3.bias torch.Size([2560])
visual.layer4.5.conv1.weight torch.Size([640, 2560, 1, 1])
visual.layer4.5.bn1.weight torch.Size([640])
visual.layer4.5.bn1.bias torch.Size([640])
visual.layer4.5.conv2.weight torch.Size([640, 640, 3, 3])
visual.layer4.5.bn2.weight torch.Size([640])
visual.layer4.5.bn2.bias torch.Size([640])
visual.layer4.5.conv3.weight torch.Size([2560, 640, 1, 1])
visual.layer4.5.bn3.weight torch.Size([2560])
visual.layer4.5.bn3.bias torch.Size([2560])
visual.attnpool.positional_embedding torch.Size([82, 2560])
visual.attnpool.k_proj.weight torch.Size([2560, 2560])
visual.attnpool.k_proj.bias torch.Size([2560])
visual.attnpool.q_proj.weight torch.Size([2560, 2560])
visual.attnpool.q_proj.bias torch.Size([2560])
visual.attnpool.v_proj.weight torch.Size([2560, 2560])
visual.attnpool.v_proj.bias torch.Size([2560])
visual.attnpool.c_proj.weight torch.Size([640, 2560])
visual.attnpool.c_proj.bias torch.Size([640])
transformer.resblocks.0.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.0.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.0.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.0.attn.out_proj.bias torch.Size([640])
transformer.resblocks.0.ln_1.weight torch.Size([640])
transformer.resblocks.0.ln_1.bias torch.Size([640])
transformer.resblocks.0.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.0.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.0.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.0.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.0.ln_2.weight torch.Size([640])
transformer.resblocks.0.ln_2.bias torch.Size([640])
transformer.resblocks.1.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.1.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.1.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.1.attn.out_proj.bias torch.Size([640])
transformer.resblocks.1.ln_1.weight torch.Size([640])
transformer.resblocks.1.ln_1.bias torch.Size([640])
transformer.resblocks.1.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.1.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.1.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.1.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.1.ln_2.weight torch.Size([640])
transformer.resblocks.1.ln_2.bias torch.Size([640])
transformer.resblocks.2.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.2.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.2.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.2.attn.out_proj.bias torch.Size([640])
transformer.resblocks.2.ln_1.weight torch.Size([640])
transformer.resblocks.2.ln_1.bias torch.Size([640])
transformer.resblocks.2.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.2.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.2.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.2.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.2.ln_2.weight torch.Size([640])
transformer.resblocks.2.ln_2.bias torch.Size([640])
transformer.resblocks.3.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.3.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.3.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.3.attn.out_proj.bias torch.Size([640])
transformer.resblocks.3.ln_1.weight torch.Size([640])
transformer.resblocks.3.ln_1.bias torch.Size([640])
transformer.resblocks.3.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.3.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.3.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.3.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.3.ln_2.weight torch.Size([640])
transformer.resblocks.3.ln_2.bias torch.Size([640])
transformer.resblocks.4.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.4.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.4.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.4.attn.out_proj.bias torch.Size([640])
transformer.resblocks.4.ln_1.weight torch.Size([640])
transformer.resblocks.4.ln_1.bias torch.Size([640])
transformer.resblocks.4.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.4.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.4.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.4.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.4.ln_2.weight torch.Size([640])
transformer.resblocks.4.ln_2.bias torch.Size([640])
transformer.resblocks.5.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.5.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.5.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.5.attn.out_proj.bias torch.Size([640])
transformer.resblocks.5.ln_1.weight torch.Size([640])
transformer.resblocks.5.ln_1.bias torch.Size([640])
transformer.resblocks.5.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.5.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.5.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.5.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.5.ln_2.weight torch.Size([640])
transformer.resblocks.5.ln_2.bias torch.Size([640])
transformer.resblocks.6.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.6.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.6.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.6.attn.out_proj.bias torch.Size([640])
transformer.resblocks.6.ln_1.weight torch.Size([640])
transformer.resblocks.6.ln_1.bias torch.Size([640])
transformer.resblocks.6.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.6.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.6.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.6.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.6.ln_2.weight torch.Size([640])
transformer.resblocks.6.ln_2.bias torch.Size([640])
transformer.resblocks.7.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.7.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.7.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.7.attn.out_proj.bias torch.Size([640])
transformer.resblocks.7.ln_1.weight torch.Size([640])
transformer.resblocks.7.ln_1.bias torch.Size([640])
transformer.resblocks.7.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.7.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.7.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.7.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.7.ln_2.weight torch.Size([640])
transformer.resblocks.7.ln_2.bias torch.Size([640])
transformer.resblocks.8.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.8.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.8.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.8.attn.out_proj.bias torch.Size([640])
transformer.resblocks.8.ln_1.weight torch.Size([640])
transformer.resblocks.8.ln_1.bias torch.Size([640])
transformer.resblocks.8.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.8.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.8.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.8.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.8.ln_2.weight torch.Size([640])
transformer.resblocks.8.ln_2.bias torch.Size([640])
transformer.resblocks.9.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.9.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.9.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.9.attn.out_proj.bias torch.Size([640])
transformer.resblocks.9.ln_1.weight torch.Size([640])
transformer.resblocks.9.ln_1.bias torch.Size([640])
transformer.resblocks.9.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.9.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.9.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.9.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.9.ln_2.weight torch.Size([640])
transformer.resblocks.9.ln_2.bias torch.Size([640])
transformer.resblocks.10.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.10.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.10.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.10.attn.out_proj.bias torch.Size([640])
transformer.resblocks.10.ln_1.weight torch.Size([640])
transformer.resblocks.10.ln_1.bias torch.Size([640])
transformer.resblocks.10.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.10.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.10.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.10.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.10.ln_2.weight torch.Size([640])
transformer.resblocks.10.ln_2.bias torch.Size([640])
transformer.resblocks.11.attn.in_proj_weight torch.Size([1920, 640])
transformer.resblocks.11.attn.in_proj_bias torch.Size([1920])
transformer.resblocks.11.attn.out_proj.weight torch.Size([640, 640])
transformer.resblocks.11.attn.out_proj.bias torch.Size([640])
transformer.resblocks.11.ln_1.weight torch.Size([640])
transformer.resblocks.11.ln_1.bias torch.Size([640])
transformer.resblocks.11.mlp.c_fc.weight torch.Size([2560, 640])
transformer.resblocks.11.mlp.c_fc.bias torch.Size([2560])
transformer.resblocks.11.mlp.c_proj.weight torch.Size([640, 2560])
transformer.resblocks.11.mlp.c_proj.bias torch.Size([640])
transformer.resblocks.11.ln_2.weight torch.Size([640])
transformer.resblocks.11.ln_2.bias torch.Size([640])
token_embedding.weight torch.Size([49408, 640])
ln_final.weight torch.Size([640])
ln_final.bias torch.Size([640])
Buffers:
visual.bn1.running_mean torch.Size([40])
visual.bn1.running_var torch.Size([40])
visual.bn1.num_batches_tracked torch.Size([])
visual.bn2.running_mean torch.Size([40])
visual.bn2.running_var torch.Size([40])
visual.bn2.num_batches_tracked torch.Size([])
visual.bn3.running_mean torch.Size([80])
visual.bn3.running_var torch.Size([80])
visual.bn3.num_batches_tracked torch.Size([])
visual.layer1.0.bn1.running_mean torch.Size([80])
visual.layer1.0.bn1.running_var torch.Size([80])
visual.layer1.0.bn1.num_batches_tracked torch.Size([])
visual.layer1.0.bn2.running_mean torch.Size([80])
visual.layer1.0.bn2.running_var torch.Size([80])
visual.layer1.0.bn2.num_batches_tracked torch.Size([])
visual.layer1.0.bn3.running_mean torch.Size([320])
visual.layer1.0.bn3.running_var torch.Size([320])
visual.layer1.0.bn3.num_batches_tracked torch.Size([])
visual.layer1.0.downsample.1.running_mean torch.Size([320])
visual.layer1.0.downsample.1.running_var torch.Size([320])
visual.layer1.0.downsample.1.num_batches_tracked torch.Size([])
visual.layer1.1.bn1.running_mean torch.Size([80])
visual.layer1.1.bn1.running_var torch.Size([80])
visual.layer1.1.bn1.num_batches_tracked torch.Size([])
visual.layer1.1.bn2.running_mean torch.Size([80])
visual.layer1.1.bn2.running_var torch.Size([80])
visual.layer1.1.bn2.num_batches_tracked torch.Size([])
visual.layer1.1.bn3.running_mean torch.Size([320])
visual.layer1.1.bn3.running_var torch.Size([320])
visual.layer1.1.bn3.num_batches_tracked torch.Size([])
visual.layer1.2.bn1.running_mean torch.Size([80])
visual.layer1.2.bn1.running_var torch.Size([80])
visual.layer1.2.bn1.num_batches_tracked torch.Size([])
visual.layer1.2.bn2.running_mean torch.Size([80])
visual.layer1.2.bn2.running_var torch.Size([80])
visual.layer1.2.bn2.num_batches_tracked torch.Size([])
visual.layer1.2.bn3.running_mean torch.Size([320])
visual.layer1.2.bn3.running_var torch.Size([320])
visual.layer1.2.bn3.num_batches_tracked torch.Size([])
visual.layer1.3.bn1.running_mean torch.Size([80])
visual.layer1.3.bn1.running_var torch.Size([80])
visual.layer1.3.bn1.num_batches_tracked torch.Size([])
visual.layer1.3.bn2.running_mean torch.Size([80])
visual.layer1.3.bn2.running_var torch.Size([80])
visual.layer1.3.bn2.num_batches_tracked torch.Size([])
visual.layer1.3.bn3.running_mean torch.Size([320])
visual.layer1.3.bn3.running_var torch.Size([320])
visual.layer1.3.bn3.num_batches_tracked torch.Size([])
visual.layer2.0.bn1.running_mean torch.Size([160])
visual.layer2.0.bn1.running_var torch.Size([160])
visual.layer2.0.bn1.num_batches_tracked torch.Size([])
visual.layer2.0.bn2.running_mean torch.Size([160])
visual.layer2.0.bn2.running_var torch.Size([160])
visual.layer2.0.bn2.num_batches_tracked torch.Size([])
visual.layer2.0.bn3.running_mean torch.Size([640])
visual.layer2.0.bn3.running_var torch.Size([640])
visual.layer2.0.bn3.num_batches_tracked torch.Size([])
visual.layer2.0.downsample.1.running_mean torch.Size([640])
visual.layer2.0.downsample.1.running_var torch.Size([640])
visual.layer2.0.downsample.1.num_batches_tracked torch.Size([])
visual.layer2.1.bn1.running_mean torch.Size([160])
visual.layer2.1.bn1.running_var torch.Size([160])
visual.layer2.1.bn1.num_batches_tracked torch.Size([])
visual.layer2.1.bn2.running_mean torch.Size([160])
visual.layer2.1.bn2.running_var torch.Size([160])
visual.layer2.1.bn2.num_batches_tracked torch.Size([])
visual.layer2.1.bn3.running_mean torch.Size([640])
visual.layer2.1.bn3.running_var torch.Size([640])
visual.layer2.1.bn3.num_batches_tracked torch.Size([])
visual.layer2.2.bn1.running_mean torch.Size([160])
visual.layer2.2.bn1.running_var torch.Size([160])
visual.layer2.2.bn1.num_batches_tracked torch.Size([])
visual.layer2.2.bn2.running_mean torch.Size([160])
visual.layer2.2.bn2.running_var torch.Size([160])
visual.layer2.2.bn2.num_batches_tracked torch.Size([])
visual.layer2.2.bn3.running_mean torch.Size([640])
visual.layer2.2.bn3.running_var torch.Size([640])
visual.layer2.2.bn3.num_batches_tracked torch.Size([])
visual.layer2.3.bn1.running_mean torch.Size([160])
visual.layer2.3.bn1.running_var torch.Size([160])
visual.layer2.3.bn1.num_batches_tracked torch.Size([])
visual.layer2.3.bn2.running_mean torch.Size([160])
visual.layer2.3.bn2.running_var torch.Size([160])
visual.layer2.3.bn2.num_batches_tracked torch.Size([])
visual.layer2.3.bn3.running_mean torch.Size([640])
visual.layer2.3.bn3.running_var torch.Size([640])
visual.layer2.3.bn3.num_batches_tracked torch.Size([])
visual.layer2.4.bn1.running_mean torch.Size([160])
visual.layer2.4.bn1.running_var torch.Size([160])
visual.layer2.4.bn1.num_batches_tracked torch.Size([])
visual.layer2.4.bn2.running_mean torch.Size([160])
visual.layer2.4.bn2.running_var torch.Size([160])
visual.layer2.4.bn2.num_batches_tracked torch.Size([])
visual.layer2.4.bn3.running_mean torch.Size([640])
visual.layer2.4.bn3.running_var torch.Size([640])
visual.layer2.4.bn3.num_batches_tracked torch.Size([])
visual.layer2.5.bn1.running_mean torch.Size([160])
visual.layer2.5.bn1.running_var torch.Size([160])
visual.layer2.5.bn1.num_batches_tracked torch.Size([])
visual.layer2.5.bn2.running_mean torch.Size([160])
visual.layer2.5.bn2.running_var torch.Size([160])
visual.layer2.5.bn2.num_batches_tracked torch.Size([])
visual.layer2.5.bn3.running_mean torch.Size([640])
visual.layer2.5.bn3.running_var torch.Size([640])
visual.layer2.5.bn3.num_batches_tracked torch.Size([])
visual.layer3.0.bn1.running_mean torch.Size([320])
visual.layer3.0.bn1.running_var torch.Size([320])
visual.layer3.0.bn1.num_batches_tracked torch.Size([])
visual.layer3.0.bn2.running_mean torch.Size([320])
visual.layer3.0.bn2.running_var torch.Size([320])
visual.layer3.0.bn2.num_batches_tracked torch.Size([])
visual.layer3.0.bn3.running_mean torch.Size([1280])
visual.layer3.0.bn3.running_var torch.Size([1280])
visual.layer3.0.bn3.num_batches_tracked torch.Size([])
visual.layer3.0.downsample.1.running_mean torch.Size([1280])
visual.layer3.0.downsample.1.running_var torch.Size([1280])
visual.layer3.0.downsample.1.num_batches_tracked torch.Size([])
visual.layer3.1.bn1.running_mean torch.Size([320])
visual.layer3.1.bn1.running_var torch.Size([320])
visual.layer3.1.bn1.num_batches_tracked torch.Size([])
visual.layer3.1.bn2.running_mean torch.Size([320])
visual.layer3.1.bn2.running_var torch.Size([320])
visual.layer3.1.bn2.num_batches_tracked torch.Size([])
visual.layer3.1.bn3.running_mean torch.Size([1280])
visual.layer3.1.bn3.running_var torch.Size([1280])
visual.layer3.1.bn3.num_batches_tracked torch.Size([])
visual.layer3.2.bn1.running_mean torch.Size([320])
visual.layer3.2.bn1.running_var torch.Size([320])
visual.layer3.2.bn1.num_batches_tracked torch.Size([])
visual.layer3.2.bn2.running_mean torch.Size([320])
visual.layer3.2.bn2.running_var torch.Size([320])
visual.layer3.2.bn2.num_batches_tracked torch.Size([])
visual.layer3.2.bn3.running_mean torch.Size([1280])
visual.layer3.2.bn3.running_var torch.Size([1280])
visual.layer3.2.bn3.num_batches_tracked torch.Size([])
visual.layer3.3.bn1.running_mean torch.Size([320])
visual.layer3.3.bn1.running_var torch.Size([320])
visual.layer3.3.bn1.num_batches_tracked torch.Size([])
visual.layer3.3.bn2.running_mean torch.Size([320])
visual.layer3.3.bn2.running_var torch.Size([320])
visual.layer3.3.bn2.num_batches_tracked torch.Size([])
visual.layer3.3.bn3.running_mean torch.Size([1280])
visual.layer3.3.bn3.running_var torch.Size([1280])
visual.layer3.3.bn3.num_batches_tracked torch.Size([])
visual.layer3.4.bn1.running_mean torch.Size([320])
visual.layer3.4.bn1.running_var torch.Size([320])
visual.layer3.4.bn1.num_batches_tracked torch.Size([])
visual.layer3.4.bn2.running_mean torch.Size([320])
visual.layer3.4.bn2.running_var torch.Size([320])
visual.layer3.4.bn2.num_batches_tracked torch.Size([])
visual.layer3.4.bn3.running_mean torch.Size([1280])
visual.layer3.4.bn3.running_var torch.Size([1280])
visual.layer3.4.bn3.num_batches_tracked torch.Size([])
visual.layer3.5.bn1.running_mean torch.Size([320])
visual.layer3.5.bn1.running_var torch.Size([320])
visual.layer3.5.bn1.num_batches_tracked torch.Size([])
visual.layer3.5.bn2.running_mean torch.Size([320])
visual.layer3.5.bn2.running_var torch.Size([320])
visual.layer3.5.bn2.num_batches_tracked torch.Size([])
visual.layer3.5.bn3.running_mean torch.Size([1280])
visual.layer3.5.bn3.running_var torch.Size([1280])
visual.layer3.5.bn3.num_batches_tracked torch.Size([])
visual.layer3.6.bn1.running_mean torch.Size([320])
visual.layer3.6.bn1.running_var torch.Size([320])
visual.layer3.6.bn1.num_batches_tracked torch.Size([])
visual.layer3.6.bn2.running_mean torch.Size([320])
visual.layer3.6.bn2.running_var torch.Size([320])
visual.layer3.6.bn2.num_batches_tracked torch.Size([])
visual.layer3.6.bn3.running_mean torch.Size([1280])
visual.layer3.6.bn3.running_var torch.Size([1280])
visual.layer3.6.bn3.num_batches_tracked torch.Size([])
visual.layer3.7.bn1.running_mean torch.Size([320])
visual.layer3.7.bn1.running_var torch.Size([320])
visual.layer3.7.bn1.num_batches_tracked torch.Size([])
visual.layer3.7.bn2.running_mean torch.Size([320])
visual.layer3.7.bn2.running_var torch.Size([320])
visual.layer3.7.bn2.num_batches_tracked torch.Size([])
visual.layer3.7.bn3.running_mean torch.Size([1280])
visual.layer3.7.bn3.running_var torch.Size([1280])
visual.layer3.7.bn3.num_batches_tracked torch.Size([])
visual.layer3.8.bn1.running_mean torch.Size([320])
visual.layer3.8.bn1.running_var torch.Size([320])
visual.layer3.8.bn1.num_batches_tracked torch.Size([])
visual.layer3.8.bn2.running_mean torch.Size([320])
visual.layer3.8.bn2.running_var torch.Size([320])
visual.layer3.8.bn2.num_batches_tracked torch.Size([])
visual.layer3.8.bn3.running_mean torch.Size([1280])
visual.layer3.8.bn3.running_var torch.Size([1280])
visual.layer3.8.bn3.num_batches_tracked torch.Size([])
visual.layer3.9.bn1.running_mean torch.Size([320])
visual.layer3.9.bn1.running_var torch.Size([320])
visual.layer3.9.bn1.num_batches_tracked torch.Size([])
visual.layer3.9.bn2.running_mean torch.Size([320])
visual.layer3.9.bn2.running_var torch.Size([320])
visual.layer3.9.bn2.num_batches_tracked torch.Size([])
visual.layer3.9.bn3.running_mean torch.Size([1280])
visual.layer3.9.bn3.running_var torch.Size([1280])
visual.layer3.9.bn3.num_batches_tracked torch.Size([])
visual.layer4.0.bn1.running_mean torch.Size([640])
visual.layer4.0.bn1.running_var torch.Size([640])
visual.layer4.0.bn1.num_batches_tracked torch.Size([])
visual.layer4.0.bn2.running_mean torch.Size([640])
visual.layer4.0.bn2.running_var torch.Size([640])
visual.layer4.0.bn2.num_batches_tracked torch.Size([])
visual.layer4.0.bn3.running_mean torch.Size([2560])
visual.layer4.0.bn3.running_var torch.Size([2560])
visual.layer4.0.bn3.num_batches_tracked torch.Size([])
visual.layer4.0.downsample.1.running_mean torch.Size([2560])
visual.layer4.0.downsample.1.running_var torch.Size([2560])
visual.layer4.0.downsample.1.num_batches_tracked torch.Size([])
visual.layer4.1.bn1.running_mean torch.Size([640])
visual.layer4.1.bn1.running_var torch.Size([640])
visual.layer4.1.bn1.num_batches_tracked torch.Size([])
visual.layer4.1.bn2.running_mean torch.Size([640])
visual.layer4.1.bn2.running_var torch.Size([640])
visual.layer4.1.bn2.num_batches_tracked torch.Size([])
visual.layer4.1.bn3.running_mean torch.Size([2560])
visual.layer4.1.bn3.running_var torch.Size([2560])
visual.layer4.1.bn3.num_batches_tracked torch.Size([])
visual.layer4.2.bn1.running_mean torch.Size([640])
visual.layer4.2.bn1.running_var torch.Size([640])
visual.layer4.2.bn1.num_batches_tracked torch.Size([])
visual.layer4.2.bn2.running_mean torch.Size([640])
visual.layer4.2.bn2.running_var torch.Size([640])
visual.layer4.2.bn2.num_batches_tracked torch.Size([])
visual.layer4.2.bn3.running_mean torch.Size([2560])
visual.layer4.2.bn3.running_var torch.Size([2560])
visual.layer4.2.bn3.num_batches_tracked torch.Size([])
visual.layer4.3.bn1.running_mean torch.Size([640])
visual.layer4.3.bn1.running_var torch.Size([640])
visual.layer4.3.bn1.num_batches_tracked torch.Size([])
visual.layer4.3.bn2.running_mean torch.Size([640])
visual.layer4.3.bn2.running_var torch.Size([640])
visual.layer4.3.bn2.num_batches_tracked torch.Size([])
visual.layer4.3.bn3.running_mean torch.Size([2560])
visual.layer4.3.bn3.running_var torch.Size([2560])
visual.layer4.3.bn3.num_batches_tracked torch.Size([])
visual.layer4.4.bn1.running_mean torch.Size([640])
visual.layer4.4.bn1.running_var torch.Size([640])
visual.layer4.4.bn1.num_batches_tracked torch.Size([])
visual.layer4.4.bn2.running_mean torch.Size([640])
visual.layer4.4.bn2.running_var torch.Size([640])
visual.layer4.4.bn2.num_batches_tracked torch.Size([])
visual.layer4.4.bn3.running_mean torch.Size([2560])
visual.layer4.4.bn3.running_var torch.Size([2560])
visual.layer4.4.bn3.num_batches_tracked torch.Size([])
visual.layer4.5.bn1.running_mean torch.Size([640])
visual.layer4.5.bn1.running_var torch.Size([640])
visual.layer4.5.bn1.num_batches_tracked torch.Size([])
visual.layer4.5.bn2.running_mean torch.Size([640])
visual.layer4.5.bn2.running_var torch.Size([640])
visual.layer4.5.bn2.num_batches_tracked torch.Size([])
visual.layer4.5.bn3.running_mean torch.Size([2560])
visual.layer4.5.bn3.running_var torch.Size([2560])
visual.layer4.5.bn3.num_batches_tracked torch.Size([])
